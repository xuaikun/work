工作总结：

2018年11月13日：
   第一天来之后，电脑连接不了网络，原来是没有根据MAC地址分配网络IP；同事们都挺好的。


2018年11月14日：
   第二天，别人的事尽量不要主动管，也许人家就是对的，被你一折腾，人家都尴尬了~
还有就是，对于自己的工作尽量不要主动提要求~
今天学到的东西，主要是python环境安装以及pychram的一系列操作
生于python-sdk未安装


2018年11月15日：
   第三天，成功安装python-sdk，并能直接在pychram上使用~，详细安装过程在work.txt文档中（(*^▽^*)）
尝试用python并调用SDK的相关API实现人脸对比
晚上回去好好看看新的路径如何修改为好~！！！！！！！！！
顺便回去把自己的电脑安装好python的东西


2018年11月16日：
   第四天，凌晨将Not_Sure的python auto筛选方式解决了~
   明天早上把Same和Different文件夹的解决~
早上来把Same和Different文件夹解决了
运行过程中，出现了异常，没有检测到图片，需要写异常处理，（(*^▽^*)），
今晚回去用概率的方法继续完成任务~


2018年11月17日：
   第五天，今天星期六不用去上班，昨天晚上还是比较早回宿舍休息的，就没有完成用概率做的方法，明天继续~


2018年11月18日：
    第六天，凌晨完成了用概率结合基准图片方法的测试，现在主要是阈值的设置存在问题，其他的都算解决了。
主要是python一些函数的调用，上下限的问题，弄清楚边界是否包含等于


2018年11月19日：
   第七天：
   https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000 git学习教程，学习如何将本地文件保存到GitHub上
今天来主要是验证程序Probably_FaceMatch.py，如果没什么问题问题，那它就OK了。


2018年11月20日：
   第八天：看看朱老师有说明安排，最近的任务：
   实现类类比较，类间比较
   （一）先对图片文件夹进行类类比较：比如:一个文件夹下有几个文件文件夹，需要找出那几个文件夹时同一类，那个单独作为一类，实现方法是，先抽取一个文件夹（第一个），然后和其他文件夹进行比较，找出与抽取文件夹相近的文件夹，并将他们剪切到同一个目录下，直到找不到相似文件夹为止，再抽取其中的一个文件夹（第一个），与其他文件夹相比较，相似的文件夹又归到一类，直到该大文件夹下没有子文件夹。
   
   （二）再对单个文件夹中图片进行类间比较：
   （1）在文件夹中抽出第i张图片与文件夹中其他图片比较，如相似度达到一定值（阈值）就保留，如相似度达不到阈值则剔除。（一直循环遍历，虽然很花时间，但是会比较准确）


 
2018年11月21日：
   第九天，今晚算是把文件夹之间的比较即：类类比较解决了（TwoClassCompare.py），其实也不难的，主要是API不给力，早上起床再把类间比较完成。
   对于类间比较，得设定阈值：有两种想法
   （一）取出所有照片保存到一个列表里面，每次提取一张与剩余的照片进行比较，相似度达到60%以上Same = Same+1，假设Same/Length >= 50%
  ,其中Same为相似的对数，Length为整个文件的长度（每次都不变）若假设成立，则认为这张照片与大部分人相同可保留，若假设不成立，则标记删除
  （可以将其路径放到列表里面），操作完本文件夹后，直接删除
   （二）取出所有照片保存到一个列表里面，每次提取一张与剩余的照片进行比较，相似度达到60%以上Same = Same + 1， 假设Same/Length >= 
 50% 其中Same为相似的对数，Length为整个文件的长度（可以修改）若假设成立，则认为这张照片与大部分人相同可保留，若假设不成立，则直接删除
 该照片
    
     对于类间比较，我们可以这样：一张图片，如果它与60%以上的图片相同，则直接退出循环，进入一张图片的比较，如果一张图片与50%的图片不同，可
 认为其不属于这个文件夹直接移除。
   今天算是完成简单版本的（1）类类比较（2）类间比较 程序代码已更新，对于类类比较的话，正确率还是蛮高的，但是类间比较的阈值需要再继续确定，
   毕竟现阶段的阈值只是猜的，没什么理论依据
   明天去公司要考虑，如何在程序异常退出后，任然能继续上次的任务（类类比较），解决方案：在当前文件夹中，实现类类比较，以首先读取到的文件夹
名称为基准，再从文件夹中，找兄弟文件夹与它是否非常相近，相近的话，先记录名称--》记录到列表里面比较好，然后在遍历完整个文件夹后，将列表中的文件夹
剪切到目标文件夹中，退出循环，再统计当前文件夹中文件夹数量，以此类推，直到当前文件夹中没有任何孩子

 
2018年11月22日：
 第十天，今天主要来实现，对于程序异常停止后，如何继续上一次的工作~
 异常后，手动操作可以继续上一次工作，接下来应该要完成的是，在网络异常后，仍然能继续启动程序。
 今天任我完成了~，程序可以不受乱七八糟的原因崩溃~perfect
 接下来就是处理真人图片了~，
   朱老师给了图片（角度大，模糊，垃圾数据多）：（一）需要一个清晰的样本（作为基准）（二）分批解决，（1）相似度0.8以上（2）0.7~0.8（3）0.6~0.7
   （4）0.55~0.6 临界（5）小于0.55错误（三）交叉验证？待定

2018年11月23日：
   第十一天，今天都不知道干了什么~~~~~~~~~~~~~~~~~，算整理了一些数据吧，把相同人的图片找出来准备查找大文件夹中的人像
这个实习主要还是熟悉python对于文件的操作，其他的还好，因为调用百度的sdk嘛，就不用写太多东西，关键的东西人家都写了


2018年11月24日：
    第十二天，今日完成正式处理朱老师交给得任务~

2018年11月25日：
   第十三天，放假，坐等学习
 
2018年11月26日：
   第十四天，重新对样本进行分类~过程比较漫长，下载虹软的人脸识别sdk用用，到时候用于交叉检验
 
2018年11月27日：
   第十五天，今天任务，就是把虹软的sdk用起~
 
2018年11月28日：
   第十六天，把自己的电脑跑起虹软的sdk~，虹软sdk跑成功了，接下来就是看如何把虹软sdk离线筛图片！
   好生看看这篇博客： https://blog.csdn.net/zhubenfulovepoem/article/details/51204551  这篇博客若使用win10 vs2017 则注意
   char configFile[100] = "config.txt"; intptr_t Handle = _findfirst(strfind.c_str(), &FileInfo); 两个地方。
 
2018年11月29日：78.1万张（已筛19.5万张）
   第十七天，今天尽量用虹软sdk把图片筛起~
   利用虹软SDK筛选图片的接口程序已经写好，明天来，就是看如何把确定的图片剪切到相应的文件夹，ok，perfect，离线版筛图脚本即将上线~
   看来得恶补c++知识呀，很多不懂~
 
2018年11月30日：
   第十八天，成功利用虹软SDK进行筛图，接下来可能要干点其他的了~在写代码的时候还是得多考虑考虑内存释放问题，不然容易爆~，还有类型的大小，调试的方法有很多
   比如打印到命令行上就是一种，差点就忘了~

2018年12月1日： 第十九天，今天不用上班
2018年12月2日：第二十天，今天不用上班
2018年12月3日：第二十一天，今天请假
2018年12月4日：第二十二天，今天请假
2018年12月5日：第二十三天，今天请假
2018年12月6日：第二十三天，今天请假
2018年12月7日：第二十四天，去公司将，虹软SDK程序的bug解决了，现在能顺利的跑起来，并且内存也不会出现溢出的情况。之前出现内存溢出的情况，主要是因为：在处理完不合理的图片后，没有将原图片进行内存释放，就又进行图片的加载，这样只要有图片出现不合理的情况，内存每次都会增加。处理方法很简单：图片出现异常，修改完后立马释放图片，释放完后重新加载图片即可。
2018年12月8日：第二十五天，今天不用上班
2018年12月9日：第二十六天，今天不用上班
2018年12月10日：第二十七天，今天请假
2018年12月11日：第二十八天，三个程序崩了，原因是有的图片虽然以jpg结尾，但它根本不是图片，导致程序终止。
2018年12月12日：第二十九天，很多时候我们需要考虑一个问题呀，利用ArcSoftsdk生成的exe开得多并不是好事，因为每个exe文件都会占用cpu，而每个exe占用cpu的比例并不是每次都会增多，相反，每个exe文件之间对cpu的占用是分解，这将意味着，当你开多了exe之后，每个exe占用cpu的比例就会下降，从而体现在程序运行缓慢（筛图缓慢），另一方面，利用百度sdk在pychram中的表现是，体现在QPS（每秒访问接口的次数）的多少，与cpu的关系不大，与qps还有网速快慢有关，自己权衡一下。
写一个人脸数量检测的程序，明天继续~，超过两个人的图片放到一起~
2018年12月13日：第三十天，这几天好无聊，手工筛图
2018年12月14日：第三十一天（工作1天），好无聊，手工筛图，发工资了~
2018年12月15日：第三十二天，今天不用上班
2018年12月16日：第三十三天，今天不用上班
2018年12月17日：第三十四天（工作2天），早上朱老师任务还没下发，静等，先看看自己的东西~，主要是完成22222222222图片的筛选，目前我是用百度sdk跑着，跑出来应该没什么问题。
2018年12月18日：第三十五天（工作3天），图还没跑完，跑出结果后，手动筛选一下就行~
2018年12月19日：第三十六天（工作4天），图跑完了，进入下一步学习：
考虑多线程处理：
在程序初始化的时候，将样本图片的特征保存起来，不用每次都导入图片了~保存到数组就行了
Init()程序好好想想怎么写，

对于测试数据，应该提取特征后保存到一个队列里面，让后另一个程序对队列进行读取并删除

加快筛选速度~
1、首先检测图片，等于说把图片全部剪切成一个人头的
2、提取图片的特征
3、加速筛选图片
2018年12月20日：第三十七天（工作5天），今天开始利用百度sdk对图片进行裁剪，将头像抠出来~ 
出现很多不能识别的图片的解决方法：
判断一下获取的图片的框与图片的大小进行比较，如相差不多，说明这张图片不需要修改，直接放到单脸文件夹中，不做处理，若人脸框图所在比例非常非常小，则需要抠图
2018年12月21日：第三十八天（工作6天），今天修改了昨天出现图片错误的bug，对剩余图片进行筛选。
2018年12月22日：第三十九天，今天休息~
2018年12月23日：第四十天，今天休息~
2018年12月24日：第四十一天（工作7天）,今天竟然低血糖，两眼一黑，差点见不到明天的太阳了。今天实现了，提前提取出样本的特征，在比较过程中，只需要提取被测试的图片的特征就好，可以加快比较速度，至少快了一倍。在此过程中，主要是搞清楚指针和取地址的问题，若想随意改变某一个数，必须使用取地址的形式，这样避免局部修改，而不是全局修改的情况。
2018年12月25日：第四十二天，今天请假
2018年12月26日：第四十三天（工作8天），完成筛图的加速~
2018年12月27日：第四十四天（工作9天），程序自动筛图中~
2018年12月28日：第四十五天（工作10天），筛图，写总结~先把总结写完
2018年12月29日：第四十六天（工作11天），筛图完毕，总结写完
2018年12月30日：第四十七天，元旦放假
2019年1月1日：第四十八天，元旦放假
2019年1月2日：第四十九天，元旦放假
2019年1月3日：第五十天，（工作12天），朱老师不在公司，那就手动筛图吧，下午把图筛完了，做点师姐给的任务吧~
2019年1月4日：第五十一天，（工作13天），朱老师还没回来，继续做自己的事吧~
2019年1月5日：第五十二天，休息
2019年1月6日：第五十三天，休息
2019年1月7日：第五十四天（工作14天），朱老师早上没来分配任务，先休息~
2019年1月8日：第五十五天（工作15天），看朱老师了~
2019年1月9日：第五十六天（工作16天），最近比较闲，做毕业设计去了
2019年1月10日：第五十七天（工作17天），最近比较闲
2019年1月11日：第五十八天（工作18天），今天实习准备结束了，好像也没任务。实习圆满结束。
2019年1月12日：和朱老师有个约定，以后可以为全品推荐学弟学妹来全品实习或者工作